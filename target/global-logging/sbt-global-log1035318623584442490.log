[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 1.8.0_202)
[debug]       Load.loadUnit: plugins took 17868.552163ms
[debug]       Load.loadUnit: defsScala took 0.83694ms
[debug] [Loading] Scanning directory /home/ubuntu/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/ubuntu/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 583.305724 ms
[debug]           Load.resolveProject(global-plugins) took 3699.656661ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/ubuntu/.sbt/1.0/plugins, plugins: List(<none>))) took 7064.670329ms
[debug] [Loading] Done in /home/ubuntu/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 8262.285602ms
[debug]       Load.loadUnit: cleanEvalClasses took 1.005616ms
[debug]     Load.loadUnit(file:/home/ubuntu/.sbt/1.0/plugins/, ...) took 35935.627221ms
[warn] In the last 40 seconds, 6.727 (16.9%) were spent in GC. [Heap: 0.24GB free of 0.29GB, max 1.72GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
[warn] In the last 14 seconds, 12.229 (91.7%) were spent in GC. [Heap: 0.29GB free of 0.32GB, max 1.72GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
[debug]   Load.apply: load took 53136.173983ms
[debug]   Load.apply: resolveProjects took 171.782138ms
[debug]   Load.apply: finalTransforms took 1034.427053ms
[debug]   Load.apply: config.delegates took 123.778084ms
[debug]   Load.apply: Def.make(settings)... took 10589.125177ms
[debug]   Load.apply: structureIndex took 2012.812981ms
[debug]   Load.apply: mkStreams took 4.059194ms
[info] loading global plugins from /home/ubuntu/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 312905.962101ms
[debug]           Load.loadUnit: plugins took 2902.783335ms
[debug]           Load.loadUnit: defsScala took 0.004007ms
[debug] [Loading] Scanning directory /home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.793934 ms
[debug]               Load.resolveProject(ilayabharathi260199-build) took 56.284648ms
[debug]             Load.loadTransitive: finalizeProject(Project(id ilayabharathi260199-build, base: /home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/project, plugins: List(<none>))) took 71.540577ms
[debug] [Loading] Done in /home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/project, returning: (ilayabharathi260199-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 123.47011ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.017922ms
[debug]         Load.loadUnit(file:/home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/project/, ...) took 3026.795321ms
[debug]       Load.apply: load took 3082.106241ms
[debug]       Load.apply: resolveProjects took 0.131021ms
[debug]       Load.apply: finalTransforms took 5148.465826ms
[debug]       Load.apply: config.delegates took 0.42444ms
[warn] In the last 283 seconds, 5.156 (1.8%) were spent in GC. [Heap: 0.48GB free of 0.54GB, max 1.72GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
[debug]       Load.apply: Def.make(settings)... took 13687.470627ms
[debug]       Load.apply: structureIndex took 215.494259ms
[debug]       Load.apply: mkStreams took 0.002845ms
[info] loading project definition from /home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 246108.083697ms
[debug]     Load.loadUnit: defsScala took 0.006833ms
[debug] [Loading] Scanning directory /home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199
[debug]       Load.loadUnit: mkEval took 17251.199643ms
[warn] In the last 1001 seconds, 129.135 (12.9%) were spent in GC. [Heap: 0.51GB free of 0.58GB, max 1.72GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
[warn] In the last 1988 seconds, 706.634 (35.5%) were spent in GC. [Heap: 0.51GB free of 0.58GB, max 1.72GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
