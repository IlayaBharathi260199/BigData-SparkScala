[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 1.8.0_202)
[debug]       Load.loadUnit: plugins took 16398.385509ms
[debug]       Load.loadUnit: defsScala took 1.296971ms
[debug] [Loading] Scanning directory /home/ubuntu/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/ubuntu/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 240.947796 ms
[debug]           Load.resolveProject(global-plugins) took 18248.3825ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/ubuntu/.sbt/1.0/plugins, plugins: List(<none>))) took 19048.23951ms
[debug] [Loading] Done in /home/ubuntu/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 20990.626108ms
[warn] In the last 61 seconds, 9.55 (15.9%) were spent in GC. [Heap: 0.23GB free of 0.27GB, max 1.72GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
[debug]       Load.loadUnit: cleanEvalClasses took 0.645235ms
[debug]     Load.loadUnit(file:/home/ubuntu/.sbt/1.0/plugins/, ...) took 37878.464943ms
[warn] In the last 13 seconds, 6.566 (54.6%) were spent in GC. [Heap: 0.27GB free of 0.30GB, max 1.72GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
[debug]   Load.apply: load took 60388.083951ms
[debug]   Load.apply: resolveProjects took 70.637499ms
[debug]   Load.apply: finalTransforms took 866.409162ms
[debug]   Load.apply: config.delegates took 82.720305ms
[debug]   Load.apply: Def.make(settings)... took 15230.932492ms
[debug]   Load.apply: structureIndex took 1587.889598ms
[debug]   Load.apply: mkStreams took 32.258646ms
[info] loading global plugins from /home/ubuntu/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 365235.153049ms
[debug]           Load.loadUnit: plugins took 9748.635132ms
[debug]           Load.loadUnit: defsScala took 0.007784ms
[debug] [Loading] Scanning directory /home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/KafkaSteaming/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/KafkaSteaming/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.312709 ms
[debug]               Load.resolveProject(kafkasteaming-build) took 84.126301ms
[debug]             Load.loadTransitive: finalizeProject(Project(id kafkasteaming-build, base: /home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/KafkaSteaming/project, plugins: List(<none>))) took 106.754324ms
[debug] [Loading] Done in /home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/KafkaSteaming/project, returning: (kafkasteaming-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 112.91712ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.021769ms
[debug]         Load.loadUnit(file:/home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/KafkaSteaming/project/, ...) took 9862.415363ms
[debug]       Load.apply: load took 9863.696414ms
[debug]       Load.apply: resolveProjects took 0.092685ms
[debug]       Load.apply: finalTransforms took 254.563218ms
[debug]       Load.apply: config.delegates took 0.558467ms
[debug]       Load.apply: Def.make(settings)... took 2535.531203ms
[debug]       Load.apply: structureIndex took 245.378483ms
[debug]       Load.apply: mkStreams took 0.002825ms
[info] loading project definition from /home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/KafkaSteaming/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 229455.895457ms
[debug]     Load.loadUnit: defsScala took 0.007344ms
[debug] [Loading] Scanning directory /home/ubuntu/IdeaProjects/ilaya/IlayaBharathi260199/KafkaSteaming
[debug]       Load.loadUnit: mkEval took 139335.297712ms
[warn] In the last 1128 seconds, 109.882 (9.7%) were spent in GC. [Heap: 0.48GB free of 0.55GB, max 1.72GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
[warn] In the last 3560 seconds, 2129.482 (59.8%) were spent in GC. [Heap: 0.48GB free of 0.55GB, max 1.72GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
